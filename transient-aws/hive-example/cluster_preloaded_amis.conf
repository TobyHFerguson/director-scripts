
#
# Copyright (c) 2016 Cloudera, Inc. All rights reserved.
#

#
# Simple AWS Cloudera Director configuration file with automatic role assignments
# that works as expected if you use a single instance type for all cluster nodes
#

#
# Cluster name
#

name: ETL-Transient

#
# Cloud provider configuration (credentials, region or zone and optional default image)
#

provider {
    type: aws

    accessKeyId: "REPLACE_ME"
    secretAccessKey: "REPLACE_ME"

    publishAccessKeys: false

    region: us-east-1

    subnetId: subnet-fd0349b4 # toby-subnet-1

    securityGroupsIds: sg-6dd35e17 # tobys hadoop security group

    instanceNamePrefix: "toby-hive-cdh"

    associatePublicIpAddresses: true
}

#
# SSH credentials to use to connect to the instances
#

ssh {
    username: centos
    privateKey: """-----BEGIN RSA PRIVATE KEY-----
-----END RSA PRIVATE KEY-----"""
}

common-instance-properties {
    image: ami-49e9fe5e
    tags {
        owner: "toby"
    }
}
#
# A list of instance types to use for group of nodes or management services
#

instances {
    master : ${common-instance-properties} {
        type: c4.xlarge
        instanceNamePrefix: toby-master-cdh
    }
    worker : ${common-instance-properties} {
        type: r3.xlarge
        instanceNamePrefix: toby-worker-cdh 
    }

}


#
# Configuration for Cloudera Manager. Cloudera Director can use an existing instance
# or bootstrap everything from scratch for a new cluster
#

cloudera-manager {

    instance: ${instances.master} {
        tags {
            application: "Cloudera Manager 5"
        }
    }

   configs {
        # CLOUDERA_MANAGER corresponds to the Cloudera Manager Server configuration options

   	 CLOUDERA_MANAGER {
            custom_banner_html: "Managed by Cloudera Director"
            MANAGES_PARCELS: false
    	}
    }

    #
    # Automatically activate 60-Day Cloudera Enterprise Trial
    #
    enableEnterpriseTrial: true

    repository: "http://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5.9/"
    repositoryKeyUrl: "http://archive.cloudera.com/cm5/redhat/7/x86_64/cm/RPM-GPG-KEY-cloudera"

}

#
# Cluster description
#

cluster {

    products {
      CDH: 5.9 # includes Hive and Spark
    }


    # S3 Configurations
    configs {
      HDFS {
        core_site_safety_valve: """
            <property>
                <name>fs.s3a.access.key</name>
                <value>AKIAJ6AZDIM3IAHR3BMA</value>
            </property>
            <property>
                <name>fs.s3a.secret.key</name>
                <value>dvxPVYYOW8kBRNYShDiXufU4BRGzI6HcnJGkjgfB</value>
            </property>
            <property>
                <name>fs.s3a.block.size</name>
                <value>134217728</value>
            </property>
            <property>
              <name>fs.s3a.server-side-encryption-algorithm</name>
              <value>AES256</value>
            </property>
            <property>
              <name>fs.s3a.connection.ssl.enabled</name>
              <value>true</value>
              <description>Enables or disables SSL connections to S3.</description>
            </property>
        """
      }
    }

    parcelRepositories: ["http://archive.cloudera.com/cdh5/parcels/5.9/"]

    services: [HDFS, YARN, HIVE, SPARK_ON_YARN, OOZIE]

    masters {
      count: 1
      instance: ${instances.master}

      roles {
        HDFS: [NAMENODE, SECONDARYNAMENODE]
        YARN: [RESOURCEMANAGER, JOBHISTORY]
        HIVE: [HIVESERVER2, HIVEMETASTORE]
        OOZIE: [OOZIE_SERVER]
        SPARK_ON_YARN: [SPARK_YARN_HISTORY_SERVER]
      }
    }

    workers {
      count: 2

      instance: ${instances.worker}

      roles {
        HDFS: [DATANODE]
        YARN: [NODEMANAGER]
      }
    }

}
